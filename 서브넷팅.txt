20.11.25

1. 루프백 : 가상 IP부여
명령어:
conf)# int loopback 0
conf)# ip add "IP" "G.W"
conf)# exit

2. 서브넷팅 : class를 더 세분하게 쪼개는것
Why? IP가 모자라서 효율적으로 분배하기 위해

ex) C class의 경우 : 25'th 비트를 고정시키면서 반으로 쪼개짐.
192.168.10.0		192.168.10.0 0000000		x.x.x.x/25 <-prefix가 서브넷M이랑 다름
192.168.10.127		192.168.10.0 1111111
------------------------------------------------
192.168.10.128		192.168.10.1 0000000 Routing 주소 ┐
192.168.10.255		192.168.10.1 1111111 G.W주소      ┴ 고정IP
			255.255.255.128
*서브네팅이 과해질수록 대표주소 수(구역당 2개)가 늘어나기 때문에 오히려 비효율적이게 된다.
 =서브네팅의 의의가 퇴색됨
*균등분배 : 모든 서브넷당 서브넷 마스크가 동일, HOST수가 같다.
 => 끝주소에 균등분배된 수를 더하면 다음 네트워크의 라우터주소가 나온다.

[문제] 16개의 서브넷으로 쪼개십쇼(2^4=16/2^4=16) */28=255.255.255.240
192.168.10.0(1~14)15
192.168.10.16(17~30)31
192.168.10.32(33~46)47
192.168.10.48(49~62)63/
192.168.10.64(65~78)79
192.168.10.80(81~94)95
192.168.10.96(97~110)111
192.168.10.112(113~126)127/
192.168.10.128(129~142)143
192.168.10.144(145~158)159
192.168.10.160(161~174)175
192.168.10.176(177~190)191/
192.168.10.192(199~206)207
192.168.10.206(225~222)223
192.168.10.224(225~238)239
192.168.10.240(241~254)192.168.10.255

※C class 균등분할 결론
2^(8-대역대 갯수)  	   = 서브넷당 IP갯수
SM(대역대:2^1)	   = 255.255.255.0/24 (*얘들은 그냥 외우자)
SM(대역대:2^2)	   = 255.255.255.128/25
SM(대역대:2^3)	   = 255.255.255.192/26
SM(대역대:2^4)	   = 255.255.255.224/27
SM(대역대:2^5)	   = 255.255.255.240/28
SM(대역대:2^6)	   = 255.255.255.248/29
SM(대역대:2^7)	   = 255.255.255.252/30

Prefix 	 	   = /(24+대역대 갯수) 
낭비되는 IP 갯수       = 대역대 갯수*2










